// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hunspell.proto

package main

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HunspellRequest struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HunspellRequest) Reset()         { *m = HunspellRequest{} }
func (m *HunspellRequest) String() string { return proto.CompactTextString(m) }
func (*HunspellRequest) ProtoMessage()    {}
func (*HunspellRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58a81579c198a196, []int{0}
}

func (m *HunspellRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HunspellRequest.Unmarshal(m, b)
}
func (m *HunspellRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HunspellRequest.Marshal(b, m, deterministic)
}
func (m *HunspellRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HunspellRequest.Merge(m, src)
}
func (m *HunspellRequest) XXX_Size() int {
	return xxx_messageInfo_HunspellRequest.Size(m)
}
func (m *HunspellRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HunspellRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HunspellRequest proto.InternalMessageInfo

func (m *HunspellRequest) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

type HunspellReply struct {
	WordList             []string `protobuf:"bytes,1,rep,name=wordList,proto3" json:"wordList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HunspellReply) Reset()         { *m = HunspellReply{} }
func (m *HunspellReply) String() string { return proto.CompactTextString(m) }
func (*HunspellReply) ProtoMessage()    {}
func (*HunspellReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_58a81579c198a196, []int{1}
}

func (m *HunspellReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HunspellReply.Unmarshal(m, b)
}
func (m *HunspellReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HunspellReply.Marshal(b, m, deterministic)
}
func (m *HunspellReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HunspellReply.Merge(m, src)
}
func (m *HunspellReply) XXX_Size() int {
	return xxx_messageInfo_HunspellReply.Size(m)
}
func (m *HunspellReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HunspellReply.DiscardUnknown(m)
}

var xxx_messageInfo_HunspellReply proto.InternalMessageInfo

func (m *HunspellReply) GetWordList() []string {
	if m != nil {
		return m.WordList
	}
	return nil
}

func init() {
	proto.RegisterType((*HunspellRequest)(nil), "main.HunspellRequest")
	proto.RegisterType((*HunspellReply)(nil), "main.HunspellReply")
}

func init() { proto.RegisterFile("hunspell.proto", fileDescriptor_58a81579c198a196) }

var fileDescriptor_58a81579c198a196 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x28, 0xcd, 0x2b,
	0x2e, 0x48, 0xcd, 0xc9, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc,
	0x53, 0x52, 0xe5, 0xe2, 0xf7, 0x80, 0x8a, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09,
	0x71, 0xb1, 0x94, 0xe7, 0x17, 0xa5, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a,
	0xda, 0x5c, 0xbc, 0x08, 0x65, 0x05, 0x39, 0x95, 0x42, 0x52, 0x5c, 0x1c, 0x20, 0x09, 0x9f, 0xcc,
	0xe2, 0x12, 0x09, 0x46, 0x05, 0x66, 0x0d, 0xce, 0x20, 0x38, 0xdf, 0xa8, 0x9d, 0x11, 0x61, 0x68,
	0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x05, 0x17, 0x47, 0x70, 0x49, 0x6a, 0x6e, 0x78,
	0x7e, 0x51, 0x8a, 0x90, 0xa8, 0x1e, 0xc8, 0x6a, 0x3d, 0x34, 0x7b, 0xa5, 0x84, 0xd1, 0x85, 0x0b,
	0x72, 0x2a, 0x95, 0x18, 0x84, 0xac, 0xb8, 0xb8, 0x82, 0x4b, 0xd3, 0xd3, 0x53, 0x8b, 0x4b, 0x32,
	0xf3, 0xf3, 0x48, 0xd3, 0x9b, 0xc4, 0x06, 0xf6, 0xaa, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xc0,
	0x61, 0x18, 0x5b, 0xfc, 0x00, 0x00, 0x00,
}
